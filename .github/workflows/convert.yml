name: Convert LaTeX to Markdown

on:
  workflow_dispatch:

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Забираємо всі гілки

      - name: Set up Pandoc and Python
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc python3 python3-pip
          pip install GitPython

      - name: Clone source repository
        env:
          SOURCE_REPO: https://github.com/MaltsevVlas1124/statementsToConvert-fork  # <<<--- ЗАМІНИ сюди адресу репозиторію-джерела
        run: |
          git clone --depth=1 --branch original-filtered $SOURCE_REPO source-repo

      - name: Prepare conversion script
        run: |
          cat << 'EOF' > convert.py
          import os
          import subprocess
          import shutil

          source_dir = 'source-repo'
          target_dir = 'converted-files'
          os.makedirs(target_dir, exist_ok=True)

          for root, dirs, files in os.walk(source_dir):
              rel_root = os.path.relpath(root, source_dir)
              target_root = os.path.join(target_dir, rel_root)
              os.makedirs(target_root, exist_ok=True)

              for file in files:
                  source_path = os.path.join(root, file)
                  target_path = os.path.join(target_root, file)

                  if file.endswith('.tex'):
                      base_name = os.path.splitext(file)[0]
                      md_target = os.path.join(target_root, base_name + '.md')
                      try:
                          subprocess.run(
                              ['pandoc', source_path, '-o', md_target, '--from=latex', '--to=markdown'],
                              check=True,
                              stdout=subprocess.PIPE,
                              stderr=subprocess.PIPE,
                          )
                          print(f"\033[92m[SUCCESS]\033[0m Converted {source_path} -> {md_target}")
                      except subprocess.CalledProcessError as e:
                          shutil.copy2(source_path, target_path)
                          print(f"\033[91m[FAILED]\033[0m Could not convert {source_path}, copied original.")
                  else:
                      shutil.copy2(source_path, target_path)

          # Move final result to the root directory
          shutil.move('converted-files', '../converted-files')
          EOF

      - name: Run conversion script
        run: |
          python3 convert.py

      - name: Create and push new branch
        env:
          TARGET_BRANCH: converted-md
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git checkout -b $TARGET_BRANCH
          rm -rf *
          cp -r ../converted-files/* .
          git add .
          git commit -m "Converted .tex files to .md where possible"
          git push origin $TARGET_BRANCH --force
