name: Convert LaTeX from Remote Repo to Markdown

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repository (e.g., user/repo-a)'
        required: true
      source_branch:
        description: 'Branch in source repository to convert from'
        required: true
        default: 'original-filtered'
      output_branch:
        description: 'Branch in this repository to push converted files to'
        required: true
        default: 'markdown-conversion'
      source_repo_pat:
        description: 'PAT for private source repo (if needed)'
        required: false

permissions:
  contents: write

env:
  OUTPUT_DIR: ./markdown_output
  SOURCE_CHECKOUT_DIR: ./source_repo_temp

jobs:
  convert_from_remote:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository (Repo B)
        uses: actions/checkout@v4

      - name: Clone source repository (Repo A)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.source_repo }}
          ref: ${{ github.event.inputs.source_branch }}
          path: ${{ env.SOURCE_CHECKOUT_DIR }}
          token: ${{ secrets.REPO_A_PAT }}

      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Set up TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: scheme-medium

      - name: Cache TeX Live
        uses: actions/cache@v4
        with:
          path: /usr/local/texlive/
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/configure-texlive.sh') }}

      - name: Convert TeX to Markdown
        run: |
          SOURCE_DIR="${{ env.SOURCE_CHECKOUT_DIR }}"
          OUTPUT_DIR="${{ env.OUTPUT_DIR }}"
          echo "Starting conversion from $SOURCE_DIR"

          mkdir -p "$OUTPUT_DIR"

          tex_count=$(find "$SOURCE_DIR" -type f -name '*.tex' | wc -l)
          if [ "$tex_count" -eq 0 ]; then
            echo "No .tex files found. Exiting."
            exit 0
          fi

          find "$SOURCE_DIR" -type f -name '*.tex' -print0 | while IFS= read -r -d '' tex_file; do
            relative="${tex_file#$SOURCE_DIR/}"
            [[ "$relative" == ".git/"* || "$relative" == *".sty" ]] && continue

            md_file="$OUTPUT_DIR/${relative%.tex}.md"
            mkdir -p "$(dirname "$md_file")"

            echo "Converting $relative → $(basename "$md_file")"
            pandoc --from latex+raw_tex \
                   --to gfm \
                   --output "$md_file" \
                   --resource-path="$SOURCE_DIR:$(dirname "$tex_file")" \
                   --citeproc \
                   --wrap=none \
                   "$tex_file" || echo "⚠️ Pandoc failed on $tex_file"
          done

          echo "Conversion completed."

      - name: Commit and Push to Output Branch in Repo B
        run: |
          OUTPUT_DIR="${{ env.OUTPUT_DIR }}"
          TARGET_BRANCH="${{ github.event.inputs.output_branch }}"
          
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git checkout -B "$TARGET_BRANCH"

          # Очистити все крім .git та .github
          find . -mindepth 1 -maxdepth 1 ! -name ".git" ! -name ".github" -exec rm -rf {} +

          if [ -d "$OUTPUT_DIR" ] && [ "$(ls -A "$OUTPUT_DIR")" ]; then
            cp -r "$OUTPUT_DIR"/* .
          else
            echo "⚠️ Output directory is empty. Creating placeholder file."
            touch .empty_conversion_result
          fi

          git add -A

          if git diff --staged --quiet; then
            echo "✅ No changes to commit."
          else
            git commit -m "Converted LaTeX from ${{ github.event.inputs.source_repo }} @ ${{ github.event.inputs.source_branch }}"
            git push --force origin "$TARGET_BRANCH"
            echo "✅ Pushed to $TARGET_BRANCH"
          fi
