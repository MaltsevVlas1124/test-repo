name: Convert LaTeX from Remote Repo to Markdown

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repository (e.g., your-username/repo-a)'
        required: true
      source_branch:
        description: 'Branch in source repository to convert from'
        required: true
        default: 'original-filtered'
      output_branch:
        description: 'Branch in this repository to push converted files to'
        required: true
        default: 'markdown-conversion'
      source_repo_pat:
        description: 'Personal Access Token (PAT) if source repo is private'
        required: false

permissions:
  contents: write

env:
  OUTPUT_DIR: ./markdown_output
  SOURCE_CHECKOUT_DIR: ./source_repo_temp

jobs:
  convert_from_remote:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repo (this repo)
        uses: actions/checkout@v4

      - name: Clone source repository (Repo A)
        run: |
          echo "Cloning ${{ github.event.inputs.source_repo }} @ ${{ github.event.inputs.source_branch }}"

          if [ -n "${{ github.event.inputs.source_repo_pat }}" ]; then
            echo "Using provided PAT for authentication"
            git clone --depth 1 --branch "${{ github.event.inputs.source_branch }}" \
              "https://${{ github.event.inputs.source_repo_pat }}@github.com/${{ github.event.inputs.source_repo }}.git" \
              "${{ env.SOURCE_CHECKOUT_DIR }}"
          else
            echo "No PAT provided. Attempting public clone"
            git clone --depth 1 --branch "${{ github.event.inputs.source_branch }}" \
              "https://github.com/${{ github.event.inputs.source_repo }}.git" \
              "${{ env.SOURCE_CHECKOUT_DIR }}"
          fi

      - name: Set up Pandoc
        uses: nikeee/setup-pandoc@v1
        with:
          version: 'latest'

      - name: Set up TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: scheme-medium

      - name: Convert TeX to Markdown
        run: |
          echo "Starting conversion..."
          mkdir -p "${OUTPUT_DIR}"

          find "${SOURCE_CHECKOUT_DIR}" -type f -name '*.tex' -print0 | while IFS= read -r -d '' tex_file; do
            relative_path="${tex_file#${SOURCE_CHECKOUT_DIR}/}"

            # Пропускаємо службові/допоміжні файли
            if [[ "$relative_path" == .git/* || "$relative_path" == *.sty ]]; then
              echo "Skipping $relative_path"
              continue
            fi

            md_path="${OUTPUT_DIR}/${relative_path%.tex}.md"
            md_dir=$(dirname "$md_path")
            mkdir -p "$md_dir"

            echo "Converting $relative_path"
            pandoc --from latex+raw_tex \
                   --to gfm \
                   --output "$md_path" \
                   --resource-path="${SOURCE_CHECKOUT_DIR}:$(dirname "$tex_file")" \
                   --citeproc \
                   --wrap=none \
                   "$tex_file" || echo "Warning: Failed for $tex_file"
          done

       - name: Commit and push to output branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -B "${{ github.event.inputs.output_branch }}"

          git rm -rf .
          git clean -fdx

          # Remove any git metadata from source repo
          rm -rf "${SOURCE_CHECKOUT_DIR}/.git"
          rm -f .gitmodules

          if [ -d "${OUTPUT_DIR}" ] && [ "$(ls -A $OUTPUT_DIR)" ]; then
            cp -r ${OUTPUT_DIR}/* .
          else
            echo "No files found in output dir. Adding empty marker."
            touch .empty_conversion_result
          fi

          git add -A

          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Converted LaTeX to Markdown from ${{ github.event.inputs.source_repo }}/${{ github.event.inputs.source_branch }}"
            git push --force origin "${{ github.event.inputs.output_branch }}"
          fi
